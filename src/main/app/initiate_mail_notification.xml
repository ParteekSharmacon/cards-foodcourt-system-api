<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/current/mule-jbossts.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
	<context:property-placeholder location="properties/dev.properties" />

	<spring:beans>
		<spring:bean id="encode" name="encoder"
			class="com.kfc.experience.mail.EncodeToBase64" />
		<spring:bean id="decode" name="decoder"
			class="com.kfc.experience.mail.DecodeBase64ToString" />
	</spring:beans>
	<sub-flow name="pushMailNotificationSubFlow">
		<logger
			message="***************** Begin of the pushMailNotificationSubFlow with unique messageId: #[sessionVars.messageId] ******************"
			level="INFO" doc:name="Init Beginning Of Logger With Flowname And MessageId" />
		<invoke object-ref="encoder" method="encode"
			methodArguments="#[sessionVars.originalReqPayload]" doc:name="Encode Request Payload" />
		<set-variable variableName="encodedRequest" value="#[payload]"
			doc:name="Set Encoded Request Payload - Variable" />
		<invoke object-ref="encoder" method="encode"
			methodArguments="#[flowVars.exceptionPayload]" doc:name="Encode Exception Payload" />
		<set-variable variableName="encodedException" value="#[payload]"
			doc:name="Set Encoded Exception Payload - Variable" />
		<dw:transform-message doc:name="Prepare Mail Msg Queue Payload">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"mail": {
		"to": p('mail.to') as :string,
		"from": p('mail.from') as :string,
		"subject": p('mail.subject') as :string,
		"cc": p('mail.cc') as :string,
		"attachments": {
			"request_payload": flowVars.encodedRequest as :string,
			"exception_payload": flowVars.encodedException as :string
		},
		"message_body_template": p('mail.body') as :string
	}
}]]></dw:set-payload>
		</dw:transform-message>
		<byte-array-to-string-transformer
			doc:name="Byte Array To String" />

		<jms:outbound-endpoint queue="${mail.queue}"
			connector-ref="Active_MQ" doc:name="Push Mail Message to ActiveMQ">
		</jms:outbound-endpoint>
		<logger
			message="***************** End of the pushMailNotificationSubFlow with unique messageId: #[sessionVars.messageId] ******************"
			level="INFO" doc:name="Init End Of Logger With Flowname And MessageId" />
	</sub-flow>


	<flow name="pullMailNotificationFlow">
		<jms:inbound-endpoint queue="${mail.queue}"
			connector-ref="Active_MQ" doc:name="pullMailNotificationFlow">
		</jms:inbound-endpoint>
		<logger
			message="***************** Begin of the #[mule:context.serviceName] with unique messageId: #[sessionVars.messageId] ******************"
			level="INFO" doc:name="Init Beginning Of Logger With Flowname And MessageId" />
		<message-properties-transformer scope="invocation"
			doc:name="Set Request And Exception Payloads - Msg Prop">
			<add-message-property key="encoded_exception_payload"
				value="#[json:mail/attachments/exception_payload]" />
			<add-message-property key="encoded_request_payload"
				value="#[json:mail/attachments/request_payload]" />
		</message-properties-transformer>
		<invoke object-ref="decoder" method="decode"
			methodArguments="#[flowVars.encoded_request_payload]" doc:name="Decode Request Payload" />
		<set-attachment attachmentName="request" value="#[payload]"
			contentType="application/json" doc:name="Attach Request Payload" />
		<invoke object-ref="decoder" method="decode"
			methodArguments="#[flowVars.encoded_exception_payload]" doc:name="Decode Exception Payload" />
		<set-attachment attachmentName="exception" value="#[payload]"
			contentType="application/json" doc:name="Attach Exception Payload" />
		<set-payload value="${mail.body}" doc:name="Set Mail Body" />
		<until-successful maxRetries="3"
			millisBetweenRetries="30000" synchronous="true" doc:name="Until Successful">
			<smtp:outbound-endpoint host="localhost"
				responseTimeout="10000" doc:name="Send Mail" />
		</until-successful>
		<logger
			message="***************** End of the #[mule:context.serviceName] with unique messageId: #[sessionVars.messageId] ******************"
			level="INFO" doc:name="Init End Of Logger With Flowname And MessageId" />
	</flow>

</mule>
